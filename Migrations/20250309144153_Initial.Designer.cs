// <auto-generated />
using System;
using APILab1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APILab1.Migrations
{
    [DbContext(typeof(CvDBContext))]
    [Migration("20250309144153_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APILab1.Models.CV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonId_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId_FK");

                    b.ToTable("CVs");
                });

            modelBuilder.Entity("APILab1.Models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CVId")
                        .HasColumnType("int");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("PersonId_FK")
                        .HasColumnType("int");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CVId");

                    b.HasIndex("PersonId_FK");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("APILab1.Models.PersonInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonInfos");
                });

            modelBuilder.Entity("APILab1.Models.WorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CVId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndYear")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId_FK")
                        .HasColumnType("int");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.Property<string>("WorkDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CVId");

                    b.HasIndex("PersonId_FK");

                    b.ToTable("WorkExperiences");
                });

            modelBuilder.Entity("APILab1.Models.CV", b =>
                {
                    b.HasOne("APILab1.Models.PersonInfo", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("APILab1.Models.Education", b =>
                {
                    b.HasOne("APILab1.Models.CV", null)
                        .WithMany("Educations")
                        .HasForeignKey("CVId");

                    b.HasOne("APILab1.Models.PersonInfo", "Person")
                        .WithMany("Educations")
                        .HasForeignKey("PersonId_FK");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("APILab1.Models.WorkExperience", b =>
                {
                    b.HasOne("APILab1.Models.CV", null)
                        .WithMany("WorkExperiences")
                        .HasForeignKey("CVId");

                    b.HasOne("APILab1.Models.PersonInfo", "Person")
                        .WithMany("WorkExperiences")
                        .HasForeignKey("PersonId_FK");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("APILab1.Models.CV", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("WorkExperiences");
                });

            modelBuilder.Entity("APILab1.Models.PersonInfo", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("WorkExperiences");
                });
#pragma warning restore 612, 618
        }
    }
}
